name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm ci
        cd client && npm ci

    - name: Run Linting
      run: |
        npm run lint
        cd client && npm run lint

    - name: Run Tests
      env:
        DB_HOST: localhost
        DB_USER: test_user
        DB_PASSWORD: test_password
        DB_NAME: test_db
        JWT_SECRET: test_secret
      run: |
        npm run test
        cd client && npm run test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm ci
        cd client && npm ci

    - name: Build Client
      run: cd client && npm run build

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: client/build

  deploy-staging:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging

    steps:
    - uses: actions/checkout@v2

    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: build
        path: client/build

    - name: Deploy to Heroku Staging
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git remote add heroku-staging https://git.heroku.com/${{ secrets.HEROKU_STAGING_APP }}.git
        git push heroku-staging main

  deploy-production:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://q-economics.com

    steps:
    - uses: actions/checkout@v2

    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: build
        path: client/build

    - name: Deploy to Production
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git remote add heroku-production https://git.heroku.com/${{ secrets.HEROKU_PRODUCTION_APP }}.git
        git push heroku-production main
